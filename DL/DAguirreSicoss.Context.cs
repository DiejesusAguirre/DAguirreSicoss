//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DAguirreSicossEntities : DbContext
    {
        public DAguirreSicossEntities()
            : base("name=DAguirreSicossEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Usuario> Usuarios { get; set; }
        public virtual DbSet<Operacione> Operaciones { get; set; }
    
        public virtual int AddUsuario(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUsuario", userNameParameter, passwordParameter);
        }
    
        public virtual int DeleteOperacion(Nullable<int> idOperacion)
        {
            var idOperacionParameter = idOperacion.HasValue ?
                new ObjectParameter("IdOperacion", idOperacion) :
                new ObjectParameter("IdOperacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOperacion", idOperacionParameter);
        }
    
        public virtual ObjectResult<GetByUsuario_Result> GetByUsuario(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByUsuario_Result>("GetByUsuario", userNameParameter, passwordParameter);
        }
    
        public virtual int AddOperacion(string numero, Nullable<int> resultado, Nullable<int> idUsuario)
        {
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var resultadoParameter = resultado.HasValue ?
                new ObjectParameter("Resultado", resultado) :
                new ObjectParameter("Resultado", typeof(int));
    
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddOperacion", numeroParameter, resultadoParameter, idUsuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ExisteNumero(string numero)
        {
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ExisteNumero", numeroParameter);
        }
    
        public virtual ObjectResult<GetByNumero_Result> GetByNumero(string numero)
        {
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByNumero_Result>("GetByNumero", numeroParameter);
        }
    
        public virtual ObjectResult<GetByIdUsuario_Result> GetByIdUsuario(Nullable<int> idUsuario)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIdUsuario_Result>("GetByIdUsuario", idUsuarioParameter);
        }
    }
}
